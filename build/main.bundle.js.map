{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/javascript/main.js","webpack:///./src/errors/error.class.js","webpack:///./src/menu/menu.class.js","webpack:///./src/modules/router/route.class.js","webpack:///./src/modules/router/router.class.js","webpack:///./src/modules/toaster/toaster.class.js","webpack:///./src/services/user-service.class.js","webpack:///./src/user/login.class.js","webpack:///./src/user/login/views/loginController.class.js","webpack:///./src/user/login/views/myStories.class.js","webpack:///./src/user/logout/logoutController.class.js","webpack:///./src/user/user.class.js"],"names":["router","Router","userService","UserService","add","Route","Error","view","app","$","get","viewContent","empty","html","Menu","options","title","active","path","divider","user","_update","_activate","userMenu","userName","dropdownBlock","userMenuOptions","option","item","_makeOption","appendTo","removeClass","addClass","hasOwnProperty","attr","group","controller","canActivate","controllers","LoginController","LogoutController","MyStories","routes","Map","window","on","event","getRoute","route","set","url","location","hash","slice","console","log","hasUser","getController","getCanActivate","getView","Toast","params","backgroundClass","background","duration","message","height","width","cssClass","toaster","css","setTimeout","remove","JSON","parse","localStorage","getItem","User","setUserName","removeItem","localUser","Login","document","formListener","submitListener","login","password","val","length","removeAttr","preventDefault","setPassword","authenticate","then","aUser","menu","setUser","replace","toast","toastIt","getUser","removeUser","clear","Promise","resolve","ajax","method","responseType","success","datas","srvUser","username","libelle","name","lastname","forname","civilite","persistentUser","setItem","stringify","error","xhr"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./assets/javascript/main.js\");\n","/**\r\n * @name main.js\r\n * @desc Point d'entrée principal dans l'application Javascript\r\n */\r\n import { Router } from '../../src/modules/router/router.class';\r\n import { Route } from '../../src/modules/router/route.class';\r\nimport { UserService } from '../../src/services/user-service.class';\r\n\r\n\r\n const router = new Router();\r\n const userService = new UserService();\r\n router\r\n .add(\r\n     new Route('/', 'LoginController', userService)\r\n )\r\n .add(\r\n     new Route('/mystories', 'MyStories', userService)\r\n     )\r\n     \r\n     .add(\r\n         new Route('/logout', 'LogoutController')\r\n     )\r\n     .add(\r\n         new Route('/errors', 'Error')\r\n );\r\n","/**\r\n * @name Error\r\n * @desorc Contrôleur pour l'affichage des erreurs de routage\r\n * @author Aélion\r\n * @version 1.0.0\r\n */\r\nexport class Error {\r\n    constructor() {\r\n        // Définit la vue pour ce contrôleur\r\n        this.view = './src/errors/views/error.view.html';\r\n    }\r\n\r\n    /**\r\n     * Méthode pour récupérer la vue à afficher\r\n     */\r\n    getView() {\r\n        // Récupère le placeholder de mon application\r\n        const app = $('[app]');\r\n\r\n        $.get(\r\n            this.view,\r\n            // Callback appelée après que le fichier ait été chargé\r\n            function(viewContent) {\r\n                app.empty(); // Vide le contenu le cas échéant\r\n                app.html(viewContent);\r\n            }\r\n        );\r\n    }    \r\n}","/**\r\n * @name Menu\r\n * @desc Gestion du menu utilisateur\r\n * @author Aélion\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n\r\nexport class Menu {\r\n    constructor() {\r\n        this.options = [\r\n            {title: 'Accueil', active: 'always', path: '/'},\r\n            {title: 'Toutes les Stories', active: 'isAdmin', path: '/allstories'},\r\n            {title: 'Mes stories', active: 'always', path: '/mystories'},\r\n            {title: 'Mon compte', active: 'always', options : [\r\n                {title: 'Mes préférences', path: '/settings'},\r\n                {title: 'Changer de mot de passe', path: '/changepassword'},\r\n                {divider: true},\r\n                {title: 'Déconnexion', path: '/logout'}\r\n            ]}\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Définit l'utilisateur connecté\r\n     * @param {*} user \r\n     */\r\n    setUser(user) {\r\n        this.user = user;\r\n        // Met à jour le menu Utilisateur\r\n        this._update();\r\n\r\n        // Active ou pas les options\r\n        this._activate();\r\n    }\r\n\r\n    _update() {\r\n        // Mise à jour de l'option du menu : (userName)\r\n        const userMenu = $('#userMenu');\r\n        userMenu.html(this.user.userName);\r\n\r\n        // On définit les options du menu\r\n        const dropdownBlock = $('#userMenuOptions');\r\n\r\n        // Virer les options existantes\r\n        dropdownBlock.empty();\r\n\r\n        // Recharge les options à partir de la définition\r\n        const userMenuOptions = this.options[3].options;\r\n        for (const option of userMenuOptions) {\r\n            const item = this._makeOption(option);\r\n            item.appendTo(dropdownBlock);\r\n        }\r\n\r\n        // En fin de parcours, on affiche le menu\r\n        dropdownBlock.removeClass('hidden');\r\n    }\r\n\r\n    /**\r\n     * Nettoie le menu Utilisateur à la déconnexion\r\n     */\r\n    clear() {\r\n        // On définit les options du menu\r\n        const dropdownBlock = $('#userMenuOptions');\r\n\r\n        // Virer les options existantes\r\n        dropdownBlock.empty();\r\n\r\n        dropdownBlock.addClass('hidden');\r\n        \r\n        const userMenu = $('#userMenu');\r\n        userMenu.html('Utilisateur');\r\n    }\r\n\r\n    _makeOption(option) {\r\n        let item = null;\r\n\r\n        if (option.hasOwnProperty('title')) {\r\n            // link logic here\r\n            item = $('<a>');\r\n            item\r\n                .addClass('dropdown-item')\r\n                .attr('href', '#' + option.path)\r\n                .html(option.title);\r\n            // <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n        } else {\r\n            // divider logic here\r\n            // <div class=\"dropdown-divider\"></div>\r\n            item = $('<div>');\r\n            item\r\n                .addClass('dropdown-divider');\r\n\r\n        }\r\n        return item;\r\n    }\r\n\r\n    _activate() {\r\n        for (let option of this.options) {\r\n            const item = $('[title=\"' + option.title + '\"]');\r\n            \r\n            if (option.active === 'always') {\r\n                item.removeClass('disabled');\r\n            } else if (option.active === 'isAdmin' && this.user.group === 'Administrateur') {\r\n                item.removeClass('disabled');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\nexport class Menu {\r\n    constructor() {\r\n        this.options = [\r\n            {title: 'Accueil', active: 'always', path: '/'},\r\n            {title: 'Toutes les Stories', active: 'isAdmin', path: '/allstories'},\r\n            {title: 'Mes stories', active: 'always', path: '/mystories'},\r\n            {title: 'Mon compte', active: 'always', options : [\r\n                {title: 'Mes préférences', path: '/settings'},\r\n                {title: 'Changer de mot de passe', path: '/changepassword'},\r\n                {divider: true},\r\n                {title: 'Déconnexion', path: '/logout'}\r\n            ]}\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Définit l'utilisateur connecté\r\n     * @param {*} user \r\n     \r\n    setUser(user) {\r\n        this.user = user;\r\n        // Met à jour le menu Utilisateur\r\n        this._update();\r\n\r\n        // Active ou pas les options\r\n        this._activate();\r\n    }\r\n\r\n    _update() {\r\n        // Mise à jour de l'option du menu : (userName)\r\n        const userMenu = $('#userMenu');\r\n        userMenu.html(this.user.userName);\r\n\r\n        // On définit les options du menu\r\n        const dropdownBlock = $('#userMenuOptions');\r\n\r\n        // Virer les options existantes\r\n        dropdownBlock.empty();\r\n\r\n        // Recharge les options à partir de la définition\r\n        const userMenuOptions = this.options[3].options;\r\n        for (const option of userMenuOptions) {\r\n            const item = this._makeOption(option);\r\n            item.appendTo(dropdownBlock);\r\n        }\r\n\r\n        // En fin de parcours, on affiche le menu\r\n        dropdownBlock.removeClass('hidden');\r\n    }\r\n\r\n    /**\r\n     * Nettoie le menu Utilisateur à la déconnexion\r\n     \r\n    clear() {\r\n        // On définit les options du menu\r\n        const dropdownBlock = $('#userMenuOptions');\r\n\r\n        // Virer les options existantes\r\n        dropdownBlock.empty();\r\n\r\n        dropdownBlock.addClass('hidden');\r\n        \r\n        const userMenu = $('#userMenu');\r\n        userMenu.html('Utilisateur');\r\n    }\r\n\r\n    _makeOption(option) {\r\n        let item = null;\r\n\r\n        if (option.hasOwnProperty('title')) {\r\n            // link logic here\r\n            item = $('<a>');\r\n            item\r\n                .addClass('dropdown-item')\r\n                .attr('href', '#' + option.path)\r\n                .html(option.title);\r\n            // <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n        } else {\r\n            // divider logic here\r\n            // <div class=\"dropdown-divider\"></div>\r\n            item = $('<div>');\r\n            item\r\n                .addClass('dropdown-divider');\r\n\r\n        }\r\n        return item;\r\n    }\r\n\r\n    _activate() {\r\n        for (let option of this.options) {\r\n            const item = $('[title=\"' + option.title + '\"]');\r\n            \r\n            if (option.active === 'always') {\r\n                item.removeClass('disabled');\r\n            } else if (option.active === 'isAdmin' && this.user.group === 'Administrateur') {\r\n                item.removeClass('disabled');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n /** \r\nexport class Menu {\r\n    constructor() {\r\n\r\n        // Tableau d'objets json dont un objet est lui même un tableau d'objets json\r\n        this.options = [\r\n            { title: 'Accueil', active: 'always', path: '/' },\r\n            { title: 'Toutes les Stories', active: 'isAdmin', path: '/allstories' },\r\n            { title: 'Mes stories', active: 'always', path: '/mystories'},\r\n            {\r\n                title: 'Mon compte', active: 'always', options: [\r\n                    { title: 'Mes préférences', path: '/settings'},\r\n                    { title: 'Changer de mot de passe', path: '/changepassword'},\r\n                    { divider: true },\r\n                    { title: 'Déconnexion', path: '/logout'}\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n\r\n    //\r\n    // Définit l'utilisateur connecté\r\n    // @param {*} user \r\n    \r\n\r\n\r\n\r\n    setUser(user) {\r\n        this.user = user;\r\n        // Met à jour le menu Utilisateur\r\n        this._update();\r\n\r\n        // Active ou pas les options\r\n        this._activate();\r\n    }\r\n\r\n    _update() {\r\n        console.log('coucou');\r\n        // Mise à jour de l'option du menu : (userName)\r\n        const userMenu = $('#userMenu');\r\n        userMenu.html(this.user.userName);\r\n\r\n        // On définit les options du menu\r\n        const dropdownBlock = $('#userMenuOptions');\r\n\r\n        // Virer les options existantes\r\n        dropdownBlock.empty();\r\n\r\n        // Recharge les options à partir de la définition\r\n        const userMenuOptions = this.options[3].options;\r\n        for (const option of userMenuOptions) {\r\n            const item = this._makeOption(option);\r\n            item.appendTo(dropdownBlock);\r\n        }\r\n\r\n        // En fin de parcours, on affiche le menu\r\n        dropdownBlock.removeClass('hidden');\r\n    }\r\n\r\n    _makeOption(option) {\r\n        let item = null;\r\n\r\n        if (option.hasOwnProperty('title')) {\r\n            // link logic here\r\n            item = $('<a>');\r\n            item\r\n                .addClass('dropdown-item')\r\n                .attr('href', '#' + option.path)\r\n                .html(option.title);\r\n            // <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n        } else {\r\n            // divider logic here\r\n            // <div class=\"dropdown-divider\"></div>\r\n            item = $('<div>');\r\n            item\r\n                .addClass('dropdown-divider');\r\n\r\n        }\r\n        return item;\r\n    }\r\n\r\n    _activate() {\r\n        for (let option of this.options) {\r\n            const item = $('[title=\"' + option.title + '\"]');\r\n\r\n            if (option.active === 'always') {\r\n                item.removeClass('disabled');\r\n            } else if (option.active === 'isAdmin' && this.user.group === 'Administrateur') {\r\n                item.removeClass('disabled');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n*/\r\n\r\n","/**\r\n * @name Route\r\n * @desc Définition des routes de l'application\r\n * @author Aélion\r\n * @version 1.0.0\r\n * \r\n */\r\n\r\n\r\nexport class Route {\r\n    constructor(path, controller, canActivate = null) {\r\n        this.path = path;\r\n        this.controller = controller;\r\n        this.canActivate = canActivate;\r\n    }\r\n\r\n    getPath() {\r\n        return this.path;\r\n    }\r\n\r\n    getController() {\r\n        return this.controller;\r\n    }\r\n\r\n    getCanActivate() {\r\n        return this.canActivate;\r\n    }\r\n}\r\n","/**\r\n * @name Router\r\n * @desc Collection des routes de l'application\r\n * @author Aélion\r\n * @version 1.0.0\r\n * \r\n */\r\n\r\n\r\nimport { Route } from './route.class'\r\n\r\n\r\n\r\n\r\nimport { LoginController } from './../../user/login/views/loginController.class';\r\nimport { MyStories } from '../../user/login/views/myStories.class';\r\nimport { LogoutController } from './../../user/logout/logoutController.class';\r\nimport { Error } from './../../errors/error.class';\r\nimport { UserService } from './../../services/user-service.class';\r\n//import { User } from '../../user/user.class';\r\n//import { Login } from '../../user/login.class';\r\n\r\n\r\nconst controllers = {\r\n    LoginController,\r\n    LogoutController,\r\n    MyStories,\r\n    Error\r\n}\r\nexport class Router {\r\n    constructor() {\r\n        this.routes = new Map();\r\n\r\n        let router = this;\r\n\r\n        // Définit le listener sur les routes\r\n        $(window).on(\r\n            'hashchange',\r\n            function(event) {\r\n                router.getRoute()\r\n            }\r\n        );\r\n\r\n        $(window).on(\r\n            'load',\r\n            function(event) {\r\n                router.getRoute()\r\n            }\r\n        );\r\n    }\r\n\r\n    add(route) {\r\n        this.routes.set(route.path, route);\r\n        return this;\r\n    }\r\n\r\n    getRoute() {\r\n        const url = location.hash.slice(1) || '/';\r\n        console.log('URL à charger [' + url + ']');\r\n\r\n        // On va essayer de chercher si dans les routes, on a quelque chose qui correspond\r\n        const route = this.routes.get(url);\r\n\r\n        // Instance d'un contrôleur vide\r\n        let controller = {};\r\n        \r\n        if (!route) {\r\n            controller = new Error();\r\n        } else {\r\n            if (url === '/') {\r\n                // On vérifie l'utilisateur\r\n                const userService = new UserService();\r\n                if (userService.hasUser()) {\r\n                    // Il y a un utilisateur identifié... donc pas de login\r\n                    controller = new MyStories();\r\n                } else {\r\n                    // Pas encore d'utilisateur, on instancie LoginController\r\n                    controller = new LoginController();\r\n                }\r\n            } else {\r\n                // La route définie est autre chose...\r\n                console.log('Instancie : ' + route.getController());\r\n\r\n                const canActivate = route.getCanActivate();\r\n                if (canActivate) {\r\n                    // L'instanciation requiert une vérification\r\n                    if (canActivate.hasUser()) {\r\n                        controller = new controllers[route.getController()]();\r\n                    } else {\r\n                        // On ne peut pas, sans utilisateur identifié\r\n                        controller = new LoginController();\r\n                    }\r\n                } else {\r\n                    // Route activable sans contrôle\r\n                    controller = new controllers[route.getController()]();\r\n                }\r\n            }\r\n        }\r\n        // A la fin, on charge la vue\r\n        controller.getView();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nconst controllers = {\r\n    LoginController,\r\n    MyStories\r\n}\r\n\r\n\r\n\r\nexport class Router {\r\n    constructor() {\r\n        this.routes = new Map();\r\n\r\n        let router = this;\r\n\r\n        //Définit le listener sur les routes\r\n        $(window).on(\r\n            'hashchange',\r\n            function (event) {\r\n                router.getRoute()\r\n            }\r\n        );\r\n        $(window).on(\r\n            'load',\r\n            function (event) {\r\n                router.getRoute()\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n    add(route) {\r\n        this.routes.set(route.path, route);\r\n        return this;\r\n    }\r\n\r\n    getRoute() {\r\n\r\n        // Le slice vire le dièse de l'adresse url s'il y en a un sinon il ajoute un /\r\n        const url = location.hash.slice(1) || '/';\r\n\r\n        console.log('URL à charger [' + url + ']');\r\n\r\n        // On va essayer de chercher si dans les routes, on a quelque chose qui correspond\r\n        const route = this.routes.get(url);\r\n\r\n        let controller = {};\r\n\r\n        if (!route) {\r\n            //Aucun contrôleur associé à cette route\r\n        } else {\r\n            if (url === '/') {\r\n                //On vérifie l'utilisateur\r\n                const userService = new UserService();\r\n                if (userService.hasUser()) {\r\n                    //Il y a un utilisateur identifié.. donc pas de login\r\n                    controller = new MyStories();\r\n                } else {\r\n                    //Pas encore d'utilisateur , on instancie LoginController\r\n                    controller = new LoginController();\r\n                }\r\n\r\n            } else {\r\n                //La route définie est autre chose...\r\n                console.log('Instancie :' + route.getController());\r\n\r\n                const canActivate = route.getCanActivate();\r\n                if (canActivate) {\r\n                    //L'instanciation requiert une vérification\r\n                    if (canActivate.hasUser()) {\r\n                        controller = new controllers[route.getController()]();\r\n                    } else {\r\n                        //On ne peut pas, sans utilisateur identifié\r\n                        controller = new LoginController();\r\n                    }\r\n                } else {\r\n                    //Route activable sans contrôle \r\n                    controller = new controllers[route.getController()]();\r\n                }\r\n\r\n\r\n            }\r\n            // A la fin, on charge la vue\r\n            controller.getView();\r\n        }\r\n    }\r\n}\r\n*/\r\n","/**\r\n * @name Toast\r\n * @desc Affiche un toast (snackbar)\r\n * @author Aélion\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n\r\n\r\nexport class Toast {\r\n    constructor(params) {\r\n\r\n        //Objet créé dans login.class avec const toast = new Toast\r\n        // méthode propre aux objets : hasOwnProperty = regarde dans params s'il y a un attribut background\r\n        //S'il ne contient pas l'attribut background (négation avec le !), transmet moi 'danger' sinon transmet ce qu'il y a dans l'objet\r\n\r\n        if (!params.hasOwnProperty('background')) {\r\n            // Paramètre de définition de la couleur de fond du toast\r\n            this.backgroundClass = 'danger';\r\n        } else {\r\n            this.backgroundClass = params.background;\r\n        }\r\n\r\n        if (!params.hasOwnProperty('duration')) {\r\n            // Durée d'affichage du toast (en secondes)\r\n            this.duration = 7;\r\n        } else {\r\n            this.duration = params.duration;\r\n        }\r\n\r\n        if (!params.hasOwnProperty('message')) {\r\n            this.message = 'Default message';\r\n        } else {\r\n            this.message = params.message;\r\n        }\r\n\r\n        if (!params.hasOwnProperty('height')) {\r\n            this.height = params.height + 'px';\r\n        } else {\r\n            this.height = '100px';\r\n        }\r\n\r\n        if (!params.hasOwnProperty('width')) {\r\n            this.width = params.width + 'px';\r\n        } else {\r\n            this.width = '200px';\r\n        }\r\n    }\r\n\r\n    setBackground(cssClass) {\r\n        this.backgroundClass = cssClass;\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this.duration = duration;\r\n    }\r\n\r\n    toastIt() {\r\n        // Crée en mémoire un nouvel élément dans le DOM\r\n        const toaster = $('<div>');\r\n\r\n        // On lui ajoute les classes\r\n        toaster\r\n            .addClass('toast')\r\n            .addClass(this.backgroundClass)\r\n            .addClass('animated')\r\n            .addClass('fadeInDownBig')\r\n            .css('width', this.width)\r\n            .css('height', this.height)\r\n            .html('<p>' + this.message + '</p>');\r\n        \r\n        // Ajoute le toaster au document lui-même\r\n        toaster.appendTo($('body'));\r\n\r\n        \r\n//Affichage pendant un certain temps\r\nsetTimeout(\r\n    function () {\r\n        setTimeout(\r\n            function () {\r\n\r\n                toaster\r\n\r\n                    .addClass('fadeOutRightBig');\r\n\r\n            },\r\n            (this.duration / 2) * 1000\r\n        );\r\n        toaster.remove();\r\n    },\r\n    //Ici, quand on arrive au bout de l'intervalle de temps\r\n    this.duration * 1000\r\n);\r\n}\r\n}\r\n\r\n\r\n","\r\n/**\r\n * @name UserService\r\n * @desc Service de gestoion de la persistence de l'utilisateur\r\n * @author Aélion\r\n * @version 1.0.0\r\n */\r\n\r\nimport { User } from \"../user/user.class\";\r\n\r\nexport class UserService {\r\n    constructor() {\r\n        this.user = {};\r\n    }\r\n\r\n    /**\r\n     * Lit localStorage pour récupérer un éventuel utilisateur\r\n     * @return boolean\r\n     */\r\n    hasUser() {\r\n        const user = JSON.parse(localStorage.getItem('storiesUser'));\r\n        if (user) {\r\n            this.user = new User();\r\n            this.user.setUserName(user.userName);\r\n            this.user.group = user.group;\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeUser() {\r\n        localStorage.removeItem('storiesUser');\r\n        this.user = {};\r\n    }\r\n\r\n    /**\r\n     * Retourne un objet Utilisateur à partir du localStorage\r\n     */\r\n    getUser() {\r\n        const localUser = JSON.parse(localStorage.getItem('storiesUser'));\r\n        const user = new User();\r\n        user.setUserName(localUser.userName);\r\n        user.group = localUser.group;\r\n        console.log('UserService::getUser');\r\n        return user;\r\n    }\r\n\r\n    getAuthenticateUser() {\r\n        this.hasUser();\r\n        return this.user;\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n export class UserService {\r\n     constructor() {\r\n         this.user = {};\r\n     }\r\n\r\n     /**\r\n      * Lit localStorage pour récupérer un éventuel utilisateur\r\n      * @return boolean\r\n      *\r\n\r\n     hasUser() {\r\n\r\n        //lire données dans localStorage = getItem et JSON.parse prendre une chaine de caractères et transformer en objet\r\n         const user = JSON.parse(localStorage.getItem('storiesUser'));\r\n         if (user) {\r\n            this.user = new User();\r\n            this.user.setUserName(user.userName);\r\n            this.user.group = user.group;\r\n\r\n\r\n             return true;\r\n         }\r\n         return false;\r\n     }\r\n     removeUser() {\r\n        localStorage.removeItem('storiesUser');\r\n        this.user = {};\r\n     }\r\n\r\n     /**\r\n     * Retourne un objet Utilisateur à partir du localStorage\r\n     \r\n\r\n     getUser() {\r\n         \r\n         const localUser = JSON.parse(localStorage.getItem('storiesUser'));\r\n         const user = new User();\r\n         user.setUserName(localUser.userName);\r\n         user.group = localUser.group;\r\n         console.log('UserService::getUser');\r\n         return user;\r\n         \r\n     }\r\n     getAuthenticateUser() {\r\n         this.hasUser();\r\n         return this.user;\r\n     }\r\n     \r\n }\r\n\r\n */","import { User } from './user.class';\r\nimport { Menu } from './../../src/menu/menu.class';\r\nimport { Toast } from './../modules/toaster/toaster.class';\r\n\r\n\r\n\r\nexport class Login {\r\n    constructor() {\r\n        // Modifier le titre du document HTML\r\n        $(document).attr('title', 'Identification');\r\n\r\n        // Modifier le titre de la page\r\n        $('#main-title').html('Identifiez-vous');\r\n\r\n        // Définition du listener sur le formulaire\r\n        this.formListener();\r\n        this.submitListener();\r\n    }\r\n\r\n    /**\r\n     * formListener Gestionnaire d'événement sur le formulaire de login\r\n     * @param void\r\n     * @return void\r\n     */\r\n    formListener() {\r\n        const app = $('[app]');\r\n\r\n        app.on(\r\n            'keyup',\r\n            '#loginForm', // Délégation d'événement...\r\n            // Callback : fonction appelée si l'événement défini survient\r\n            function(event) {\r\n                // Définition des attributs\r\n                let login = $('[name=\"loginField\"]');\r\n                let password = $('[name=\"passwordField\"]');\r\n                \r\n                // Est-ce que les deux champs sont remplis\r\n                if ( \r\n                    password.val() !== '' &&\r\n                    login.val().length >= 5 ) {\r\n                    // On peut activer le bouton...\r\n                    $('#btnLogin').removeAttr('disabled');\r\n                } else {\r\n                    // Non, ça ne le fait pas tout seul, il faut lui dire\r\n                    $('#btnLogin').attr('disabled', 'disabled');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    submitListener() {\r\n        const app = $('[app]');\r\n        app.on(\r\n            'submit',\r\n            '#loginForm',\r\n            function(event) {\r\n                // Définition des attributs\r\n                let login = $('[name=\"loginField\"]');\r\n                let password = $('[name=\"passwordField\"]');\r\n\r\n                event.preventDefault(); // Empêche l'action par défaut...\r\n                \r\n                // Instancie un nouvel utilisateur\r\n                const user = new User();\r\n\r\n                // Définit le login et le password de l'utilisateur\r\n                user.setUserName(login.val());\r\n                user.setPassword(password.val());\r\n\r\n                user.authenticate().then((aUser) => {\r\n                    // Gère l'authentification...\r\n                    if (aUser) {\r\n                        console.log('Bravo, tu peux continuer !');\r\n                        // Instancie le menu...\r\n\r\n                        $(document).attr('title', 'Bienvenue');\r\n                        $('#main-title').html('Bienvenue');\r\n                        const menu = new Menu();\r\n                        menu.setUser(user);\r\n\r\n                        // On va essayer d'aller vers une autre page\r\n                        document.location.replace('#/mystories');\r\n                    } else {\r\n                        console.log('Dommage, échec !');\r\n                        // Efface les champs et désactive le bouton\r\n                        login.val('');\r\n                        password.val('');\r\n\r\n                        $('#btnLogin').attr('disabled', 'disabled');\r\n\r\n                        // On peut instancier un toast\r\n                        const toast = new Toast(\r\n                            {\r\n                                message: 'Ce login ou ce mot de passe ne correspond à aucun utilisateur',\r\n                                duration: 4,\r\n                                background: 'warning',\r\n                                width: 200,\r\n                                height: 100\r\n                            }\r\n                        );\r\n                        toast.toastIt();\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n\r\n/*\r\nexport class Login {\r\n    constructor() {\r\n        // Modifier le titre du document HTML\r\n        $(document).attr('title', 'Identification');\r\n\r\n        // Modifier le titre de la page\r\n        $('#main-title').html('Identifiez-vous');\r\n\r\n\r\n\r\n        // Définition du listener sur le formulaire\r\n        this.formListener();\r\n        this.submitListener();\r\n    }\r\n\r\n    \r\n     //* formListener Gestionnaire d'événement sur le formulaire de login\r\n     //* @param void\r\n     //* @return void\r\n     //* \r\n\r\n\r\n    formListener() {\r\n        let login = this.login;\r\n        let password = this.password;\r\n\r\n        const app = $('[app]');\r\n\r\n\r\n        //$('#loginForm').on(\r\n        app.on(\r\n            'keyup',\r\n            '#loginForm', //Délégation d'évènement...\r\n            // Callback : fonction appelée si l'événement défini survient\r\n            function (event) {\r\n\r\n                // Définition des attributs\r\n                let login = $('[name=\"loginField\"]');\r\n                let password = $('[name=\"passwordField\"]');\r\n\r\n                // Est-ce que les deux champs sont remplis\r\n                if (\r\n                    password.val() !== '' &&\r\n                    login.val().length >= 5) {\r\n                    // On peut activer le bouton...\r\n                    $('#btnLogin').removeAttr('disabled');\r\n                } else {\r\n                    // Non, ça ne le fait pas tout seul, il faut lui dire\r\n                    $('#btnLogin').attr('disabled', 'disabled');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    submitListener() {\r\n        // let login = this.login;\r\n        // let password = this.password;\r\n\r\n        const app = $('[app]');\r\n\r\n\r\n        //$('#loginForm').on(\r\n        app.on(\r\n            'submit',\r\n            '#loginForm',\r\n\r\n\r\n            function (event) {\r\n\r\n                // Définition des attributs\r\n                let login = $('[name=\"loginField\"]');\r\n                let password = $('[name=\"passwordField\"]');\r\n\r\n\r\n                event.preventDefault(); // Empêche l'action par défaut...\r\n\r\n                // Instancie un nouvel utilisateur\r\n                const user = new User();\r\n\r\n                // Définit le login et le password de l'utilisateur\r\n                user.setUserName(login.val());\r\n                user.setPassword(password.val());\r\n\r\n                user.authenticate().then((aUser) => {\r\n\r\n\r\n                    // Gère l'authentification...\r\n                if (aUser) {\r\n                    console.log('Bravo tu peux continuer!!');\r\n                    // Instancie le menu...\r\n                    $(document).attr('title', 'Bienvenue');\r\n                    $('#main-title').html('Bienvenue');\r\n                    const menu = new Menu();\r\n                    menu.setUser(user);\r\n\r\n                    //On va essayer d'aller vers une autre page\r\n                    document.location.replace('#mystories');\r\n\r\n\r\n\r\n\r\n\r\n                } else {\r\n                    console.log('Dommage, échec!');\r\n                    // Efface les champs et désactive le bouton\r\n                    login.val('');\r\n                    password.val('');\r\n\r\n                    $('#btnLogin').attr('disabled', 'disabled');\r\n\r\n                    // On peut instancier un toast\r\n                    const toast = new Toast(\r\n                        {\r\n                            message: 'Ce login ou ce mot de passe ne correspond à aucun utilisateur',\r\n                            duration: 10,\r\n                            background: 'warning',\r\n                            width: 200,\r\n                            height: 100\r\n                        }\r\n                    );\r\n                    toast.toastIt();\r\n                }\r\n\r\n                });\r\n\r\n                \r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n*/","/**\r\n * @name LoginController\r\n * @desc Contrôleur pour la gestion du formulaire de Login\r\n * @author Aélion\r\n * @version 1.0.0\r\n */\r\n\r\n\r\n import { Login } from './../../login.class';\r\n\r\n\r\n \r\n export class LoginController {\r\n    constructor() {\r\n        // Définit la vue pour ce contrôleur\r\n        this.view = './src/user/login/views/loginform.view.html';\r\n\r\n        // Instancier la classe Login pour la gestion du formulaire\r\n        this.login = new Login();\r\n    }\r\n\r\n    /**\r\n     * Méthode pour récupérer la vue à afficher\r\n     */\r\n    getView() {\r\n        // Récupère le placeholder de mon application\r\n        const app = $('[app]');\r\n\r\n        $.get(\r\n            this.view,\r\n            // Callback appelée après que le fichier ait été chargé\r\n            function(viewContent) {\r\n                app.empty(); // Vide le contenu le cas échéant\r\n                app.html(viewContent);\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n\r\n /*\r\nexport class LoginController {\r\n    constructor() {\r\n        //Définition de la vue (ce qui est affiché) pour ce contrôleur\r\n        this.view = './src/user/login/views/loginform.view.html';\r\n        //console.log('Vue' + this.view);\r\n        this.login = new Login ();\r\n    }\r\n\r\n    /**\r\n     * Méthode pour récupérer la vue à afficher\r\n     \r\n    getView() {\r\n        //Récupère le placeholder de mon application\r\n        const app = $('[app]');\r\n\r\n        //console.log('Tente de charger : ' + this.view);\r\n        //Méthode de jquery (get) qui permet d'aller cherche un fichier quelque part et de la retourner dans une fonction (on récupère avec get et si succès, on le récupère dans la fonction)\r\n        // Le contenu du fichier view sera récupéré dans le paramètre viewContent de la fonction\r\n        $.get(\r\n            this.view,\r\n            function (viewContent) {\r\n                app.empty(); //Vide le contenu le cas échéant\r\n                app.html(viewContent);\r\n\r\n                //console.log(viewContent);\r\n            }\r\n        );\r\n    }\r\n\r\n}\r\n*/","\r\n\r\nimport { Menu } from '../../../menu/menu.class';\r\nimport {UserService} from '../../../services/user-service.class'\r\n\r\n\r\n\r\nexport class MyStories {\r\nconstructor() {\r\n    //Définition de la vue (ce qui est affiché) pour ce contrôleur\r\n    this.view = './src/user/login/views/stories.view.html';\r\n    \r\n    const userService = new UserService();\r\n    const menu = new Menu ();\r\n    menu.setUser(userService.getUser());\r\n \r\n}\r\n\r\n/**\r\n * Méthode pour récupérer la vue à afficher\r\n */\r\ngetView() {\r\n    //Récupère le placeholder de mon application\r\n    const app = $('[app]');\r\n\r\n    //console.log('Tente de charger : ' + this.view);\r\n    //Méthode de jquery (get) qui permet d'aller cherche un fichier quelque part et de la retourner dans une fonction (on récupère avec get et si succès, on le récupère dans la fonction)\r\n    // Le contenu du fichier view sera récupéré dans le paramètre viewContent de la fonction\r\n    $.get(\r\n        this.view,\r\n        function (viewContent) {\r\n            app.empty(); //Vide le contenu le cas échéant\r\n            app.html(viewContent);\r\n\r\n            //console.log(viewContent);\r\n        }\r\n    );\r\n}\r\n\r\n}","/**\r\n * @name LogoutController\r\n * @desc Contrôleur pour la déconnexion de l'utilisateur\r\n * @author Aélion\r\n * @version 1.0.0\r\n */\r\nimport { LoginController } from './../login/views/loginController.class';\r\nimport { UserService } from '../../services/user-service.class';\r\nimport { Menu } from '../../menu/menu.class';\r\n\r\nexport class LogoutController {\r\n    constructor() {\r\n        // Utilise le service pour supprimer la clé\r\n        const userService = new UserService();\r\n        userService.removeUser();\r\n\r\n        // Ne pas oublier de restaurer le menu utilisateur et donc de virer les options\r\n        const menu = new Menu();\r\n        menu.clear();\r\n        \r\n        // Instancier la classe Login pour la gestion du formulaire\r\n        this.login = new LoginController();\r\n    }\r\n\r\n    /**\r\n     * Méthode pour récupérer la vue à afficher\r\n     */\r\n    getView() {\r\n        return this.login.getView();\r\n    }\r\n}","/**\r\n * @name User\r\n * @desc Service de gestion des utilisateurs\r\n * @author Aélion\r\n * @version 1.0.1\r\n * * Ajout de la persistence de l'utilisateur\r\n */\r\n\r\nexport class User {\r\n    constructor() {}\r\n\r\n    /**\r\n     * Définit le username de l'utilisateur\r\n     * @param {*} userName \r\n     */\r\n    setUserName(userName) {\r\n        this.userName = userName;\r\n    }\r\n\r\n    /**\r\n     * Définit le mot de passe utilisateur\r\n     * @param {*} password \r\n     */\r\n    setPassword(password) {\r\n        this.password = password;\r\n    }\r\n\r\n    /**\r\n     * Identifie l'utilisateur à partir d'un login et d'un mot de passe\r\n     * @return boolean\r\n     */\r\n    authenticate() {\r\n        // Appel vers le serveur :\r\n        // GET http://localhost:3000/users/:login/:password\r\n\r\n        let user = this;\r\n        return new Promise((resolve) => {\r\n            $.ajax({\r\n                url: 'http://localhost:3000/users/' + this.userName + '/' + this.password,\r\n                method: 'get',\r\n                responseType: 'json',\r\n                success: function(datas) {\r\n                    const srvUser = datas[0];\r\n\r\n                    if (srvUser) {\r\n                        user.userName = srvUser.username;\r\n                        user.group = srvUser.libelle;\r\n                        user.name = srvUser.lastname;\r\n                        user.forname = srvUser.forname;\r\n                        user.civilite = srvUser.civilite;\r\n        \r\n                        const persistentUser = {\r\n                            userName: user.userName,\r\n                            group: user.group\r\n                        };\r\n        \r\n                        // On ajoute l'utilisateur au localStorage\r\n                        localStorage.setItem('storiesUser', JSON.stringify(persistentUser));\r\n\r\n                        resolve(true);\r\n                    } else {\r\n                        // Pas d'utilisateur... désolé\r\n                        resolve(false);\r\n                    }\r\n\r\n                },\r\n                error: function(xhr, error) {\r\n                    resolve(false);\r\n                },\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n /*\r\nexport class User {\r\n    constructor() { }\r\n\r\n    //\r\n    //* Définit le username de l'utilisateur\r\n    // * @param {*} userName\r\n     //\r\n\r\n    setUserName(userName) {\r\n        this.userName = userName;\r\n        // On prend ce qui a été saisi par l'utilisateur et on la range dans userName\r\n    }\r\n\r\n    //**\r\n     //* Définit le mot de passe de l'utilisateur\r\n     //* @param {*} password\r\n     //\r\n\r\n    setPassword(password) {\r\n        this.password = password;\r\n    }\r\n\r\n\r\n    /**\r\n     //* Identifie l'utilisateur à partir d'un login et d'un mot de passe\r\n     //* @return boolean\r\n     \r\n    authenticate() {\r\n        // Appel vers le serveur : \r\n        // GET http://loalhost:3000/users/:login/:password\r\n\r\n        let user = this;\r\n      return new Promise((resolve) => {\r\n\r\n        $.ajax({\r\n            url: 'http://localhost:3000/users' + this.userName + '/' + this.password,\r\n            method: 'get',\r\n            responseType: 'json',\r\n            success: function (datas) {\r\n                const srvUser = datas[0];\r\n                if(srvUser) {\r\n                user.userName = srvUser.login;\r\n                user.group = srvUser.libelle;\r\n                user.name = srvUser.nom;\r\n                user.forname = srvUser.prenom;\r\n                user.civilite = srvUser.civilite;\r\n\r\n                const persistentUser = {\r\n                    userName: user.userName,\r\n                    group: user.group\r\n                };\r\n\r\n                //On ajoute l'utilisateur au localStorage\r\n                localStorage.setItem('storiesUser', JSON.stringify(user));\r\n\r\n                \r\n               resolve(true);\r\n            } else {\r\n                // Pas d'utilisateur désolé ...\r\n                resolve(false);\r\n            }\r\n\r\n            },\r\n            error: function (xhr, error) {\r\n                resolve(false);\r\n\r\n                //NOOP\r\n            },\r\n            \r\n        });\r\n      });\r\n       \r\n    }\r\n}\r\n\r\n*/"],"sourceRoot":""}